---
- name: find out whenever node already in swarm
  command: "docker info"
  register: "docker_info"
  tags: ['add_nodes_docker_swarm']

- name: not really awesome election >_<
  set_fact: >
    active_swarm_hosts="{% for h in play_hosts %}{% if 'Swarm: active' in hostvars[h].docker_info.stdout -%}{{h}},{% endif %}{% endfor %}"
  run_once: yes
  tags: ['add_nodes_docker_swarm']

- name: really awesome election >_<
  set_fact: leader="{{active_swarm_hosts[:-1].split(',')|list|max}}"
  run_once: yes
  tags: ['add_nodes_docker_swarm']

- name: get manager token
  shell: docker swarm join-token -q manager
  register: manager_token
  when: leader is defined and leader == inventory_hostname
  tags: ['add_nodes_docker_swarm']

- name: join all other nodes
  command: "docker swarm join --token {{(hostvars[leader]['manager_token']).stdout}} {{hostvars[leader].privip}}:2377"
  when: leader is defined and leader != inventory_hostname and 'Swarm{{":"}} inactive' in docker_info.stdout
  tags: ['add_nodes_docker_swarm']

- name: check if consul network exist
  command: docker network ls
  register: docker_network_ls
  when: leader is defined and leader == inventory_hostname and 'Swarm{{":"}} active' in docker_info.stdout
  tags: ['add_nodes_docker_swarm']

- name: create overlay network
  command: docker network create --attachable --driver overlay --subnet 18.18.0.0/16 consul
  when: leader is defined and leader == inventory_hostname and 'Swarm{{":"}} active' in docker_info.stdout and 'consul' not in docker_network_ls.stdout
  tags: ['add_nodes_docker_swarm']

- name: form list of node constraints
  set_fact: constraints="{% for h in hostvars[inventory_hostname].constraints.split(',') %}--label-add {{h}}=true {% endfor %}"
  when: hostvars[inventory_hostname].constraints is defined and hostvars[inventory_hostname].constraints != "" and 'Swarm{{":"}} inactive' in docker_info.stdout
  tags: ['add_nodes_docker_swarm']

- name: set node labels for constraints
  command: "docker node update {{constraints}} {{inventory_hostname}}"
  when: hostvars[inventory_hostname].constraints is defined and constraints != "" and 'Swarm{{":"}} inactive' in docker_info.stdout
  tags: ['add_nodes_docker_swarm']
